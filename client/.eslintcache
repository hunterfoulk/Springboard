[{"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\index.tsx":"1","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\App.tsx":"2","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\navbar\\navbar.tsx":"3","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\homepage.tsx":"4","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\dropdown\\dropdown.tsx":"5","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\actions\\actions.js":"6","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\cards\\cards.tsx":"7","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modal.tsx":"8","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modalDropdown.tsx":"9","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useFetch.ts":"10","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\routes.js":"11","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\threadContext.tsx":"12","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\threadReducer.tsx":"13","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\threadResults.tsx":"14","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\threads\\threads.tsx":"15","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useClickOutside.js":"16","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\loading\\loading.tsx":"17","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\trending\\trendingCard.tsx":"18","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\recentsCard\\recentsCard.tsx":"19","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\thread.tsx":"20","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\categoryCard\\categoryCard.tsx":"21","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\sortdropdown\\sort.tsx":"22","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\comment.tsx":"23","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\reply.tsx":"24"},{"size":223,"mtime":1607728231072,"results":"25","hashOfConfig":"26"},{"size":343,"mtime":1608056336433,"results":"27","hashOfConfig":"26"},{"size":531,"mtime":1608150360679,"results":"28","hashOfConfig":"26"},{"size":1423,"mtime":1608318801383,"results":"29","hashOfConfig":"26"},{"size":3619,"mtime":1609181096213,"results":"30","hashOfConfig":"26"},{"size":3674,"mtime":1611686303418,"results":"31","hashOfConfig":"26"},{"size":2420,"mtime":1611867707909,"results":"32","hashOfConfig":"26"},{"size":4668,"mtime":1608831591673,"results":"33","hashOfConfig":"26"},{"size":2173,"mtime":1607915086064,"results":"34","hashOfConfig":"26"},{"size":786,"mtime":1607985808894,"results":"35","hashOfConfig":"26"},{"size":1593,"mtime":1611772276329,"results":"36","hashOfConfig":"26"},{"size":676,"mtime":1609368255164,"results":"37","hashOfConfig":"26"},{"size":2686,"mtime":1611686486746,"results":"38","hashOfConfig":"26"},{"size":4117,"mtime":1611772357962,"results":"39","hashOfConfig":"26"},{"size":4261,"mtime":1611864189964,"results":"40","hashOfConfig":"26"},{"size":750,"mtime":1608154161689,"results":"41","hashOfConfig":"26"},{"size":646,"mtime":1608156947852,"results":"42","hashOfConfig":"26"},{"size":1719,"mtime":1608663131472,"results":"43","hashOfConfig":"26"},{"size":1288,"mtime":1611772683042,"results":"44","hashOfConfig":"26"},{"size":7647,"mtime":1611940494604,"results":"45","hashOfConfig":"26"},{"size":1504,"mtime":1608600198799,"results":"46","hashOfConfig":"26"},{"size":1932,"mtime":1609180979944,"results":"47","hashOfConfig":"26"},{"size":4476,"mtime":1611940646695,"results":"48","hashOfConfig":"26"},{"size":813,"mtime":1611767527865,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"11ham0i",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\index.tsx",[],["116","117"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\App.tsx",["118","119"],"import React, { useState } from 'react';\nimport Routes from \"./routes\"\nimport { ThreadContextProvider } from \"./context/contexts/threadContext\"\n\n\ninterface Props {\n\n}\n\nconst App: React.FC<Props> = ({ }) => {\n\n\n\n  return (\n    <>\n\n      <ThreadContextProvider>\n        <Routes />\n      </ThreadContextProvider>\n    </>\n  )\n}\n\nexport default App","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\navbar\\navbar.tsx",["120","121"],"import React from 'react'\r\nimport \"./navbar.scss\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Navbar: React.FC<Props> = ({ }) => {\r\n    const history = useHistory();\r\n\r\n    const home = () => {\r\n        history.push({\r\n            pathname: `/`,\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <span style={{ cursor: \"pointer\" }} onClick={home}>AnonBoard</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\homepage.tsx",["122","123","124"],"import React, { useState, useEffect } from 'react'\r\nimport \"./homepage.scss\"\r\nimport Dropdown from \"../components/dropdown/dropdown\"\r\nimport Card from \"../components/cards/cards\"\r\nimport CategoryActions from \"../actions/actions\"\r\nimport ThreadModal from \"../components/modal/modal\"\r\nimport Loading from \"../components/loading/loading\"\r\n\r\ninterface Props {\r\n    setState: React.Dispatch<React.SetStateAction<string>>\r\n\r\n}\r\n\r\nconst Homepage: React.FC<Props> = ({ setState }) => {\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const { getCategories } = CategoryActions();\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    async function fetchCategories() {\r\n        const response = await getCategories();\r\n        setCategories(response)\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchCategories()\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(\"categories\", categories)\r\n    return (\r\n        <>\r\n            {loading ? <Loading /> : <div className=\"homepage-main\">\r\n                <div className=\"h1-container\">\r\n                    <h1>Topics</h1>\r\n\r\n                </div>\r\n                <div className=\"cards-main\">\r\n                    {categories.map((card, i) => (\r\n\r\n                        <Card card={card} setState={setState} />\r\n\r\n                    ))}\r\n                </div>\r\n\r\n\r\n\r\n            </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\dropdown\\dropdown.tsx",["125","126","127","128","129"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport \"./dropdown.scss\"\r\nimport { GoPlus } from 'react-icons/go';\r\nimport useFetch from \"../../hooks/useFetch\"\r\nimport CategoryActions from \"../../actions/actions\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>,\r\n  setState: React.Dispatch<React.SetStateAction<string>>,\r\n  state: string\r\n\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 160,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nconst Dropdown: React.FC<Props> = ({ setOpen, setState, state }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const onStateChange = async (event: React.ChangeEvent<{ value: string }>) => {\r\n\r\n\r\n    switch (event.target.value) {\r\n      case '0':\r\n        console.log('all was chosen');\r\n        break;\r\n      case '2':\r\n        console.log('tech was chosen');\r\n\r\n        let technology = 'Technology'\r\n        setState(technology)\r\n        console.log(\"VALUE\", event.target.value)\r\n\r\n        history.push({\r\n          pathname: `/t/${technology}`,\r\n          state: { category: event.target.value, header: technology, dropdownState: technology },\r\n\r\n        });\r\n        break;\r\n\r\n      case '1':\r\n        console.log('fitness was chosen');\r\n\r\n        let fitness = 'Fitness'\r\n        setState(fitness)\r\n\r\n        console.log(\"VALUE\", event.target.value)\r\n        history.push({\r\n          pathname: `/t/${fitness}`,\r\n          state: { category: event.target.value, header: fitness, dropdownState: fitness },\r\n\r\n        });\r\n        break;\r\n\r\n      case '3':\r\n        console.log('sci was chosen');\r\n        break;\r\n\r\n      case '6':\r\n        console.log('finance was chosen');\r\n        break;\r\n\r\n      case '4':\r\n        console.log('travel was chosen');\r\n        break;\r\n\r\n      case '5':\r\n        console.log('books was chosen');\r\n        break;\r\n\r\n      case '7':\r\n        console.log('politics was chosen');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          value={state}\r\n          onChange={onStateChange}\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'age' }}\r\n        >\r\n          <option label=\"All\" value=\"0\">All</option>\r\n          <option label=\"Technology\" value=\"2\">Technology</option>\r\n          <option label=\"Fitness\" value=\"1\">Fitness</option>\r\n          <option label=\"Science\" value=\"3\">Science</option>\r\n          <option label=\"Finance\" value=\"6\">Finance</option>\r\n          <option label=\"Travel\" value=\"4\">Travel</option>\r\n          <option label=\"Books\" value=\"5\">Books</option>\r\n          <option label=\"Politics\" value=\"7\">Politics</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Change Category</FormHelperText>\r\n      </FormControl>\r\n      <button className=\"new-thread-button\" onClick={() => setOpen(true)}>\r\n        <GoPlus style={{ position: \"relative\", right: \"4px\" }} /> New Thread\r\n    </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Dropdown","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\actions\\actions.js",["130"],"import axios from \"axios\";\r\nimport { ThreadContext } from \"../context/contexts/threadContext\";\r\nimport { useContext } from 'react';\r\n\r\n\r\nexport default function CategoryActions() {\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n\r\n    async function getCategories() {\r\n        const response = await axios.get(\"http://localhost:8000/all\")\r\n        let data = response.data\r\n        return data;\r\n    }\r\n\r\n    async function createThread(payload) {\r\n        await axios\r\n            .post(\"http://localhost:8000/createThread\", {\r\n                title: payload.title,\r\n                body: payload.body,\r\n                category: payload.category,\r\n            })\r\n            .then(() => {\r\n                console.log(\"data sent\");\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    async function fetchThreads(term) {\r\n\r\n        try {\r\n            console.log(\"fired\", term)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchThreads\", { params: { term: term } });\r\n            let threads = response.data\r\n\r\n            threadDispatch({ type: 'UPDATE_THREADS', threads: threads });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function fetchCategoryImage(term) {\r\n\r\n        try {\r\n            console.log(\"IMAGE fired\")\r\n            const response = await axios.get(\"http://localhost:8000/fetchCategoryImage\", { params: { term: term } });\r\n            let header = response.data\r\n            console.log(\"HEADER\", header)\r\n            return header\r\n            // threadDispatch({ type: 'UPDATE_THREADS', header: header });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function fetchRecents(term) {\r\n\r\n        try {\r\n            console.log(\"fired term \", term)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchRecents\", { params: { term: term } });\r\n            let recents = response.data\r\n            return recents\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function fetchThread(id) {\r\n\r\n        try {\r\n            console.log(\"FETCH THREAD FIRED\", id)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchThread\", { params: { id: id } });\r\n            let recents = response.data\r\n            return recents\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function createComment(payload) {\r\n        await axios\r\n            .post(\"http://localhost:8000/createComment\", {\r\n                message: payload.comment,\r\n                thread_id: payload.thread_id\r\n            })\r\n            .then(() => {\r\n                console.log(\"comment created!\");\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    async function createReply(payload) {\r\n        await axios\r\n            .post(\"http://localhost:8000/createReply\", {\r\n                message: payload.message,\r\n                comment_id: payload.comment_id,\r\n                id: payload.thread_id\r\n            })\r\n            .then((res) => {\r\n                // console.log(\"comment created!\");\r\n                console.log(\"new comments\", res.data.comments)\r\n                threadDispatch({ type: 'SET_COMMENTS', comments: res.data.comments })\r\n\r\n\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    return {\r\n        getCategories,\r\n        createThread,\r\n        fetchThreads,\r\n        fetchCategoryImage,\r\n        fetchRecents,\r\n        fetchThread,\r\n        createComment,\r\n        createReply\r\n    }\r\n}\r\n\r\n",["131","132"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\cards\\cards.tsx",["133","134","135"],"import React from 'react'\r\nimport \"./cards.scss\"\r\nimport Moment from 'react-moment';\r\nimport { triggerAsyncId } from 'async_hooks';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    card: Category\r\n    setState: React.Dispatch<React.SetStateAction<string>>\r\n\r\n}\r\n\r\nconst Card: React.FC<Props> = ({ card, setState }) => {\r\n    const history = useHistory();\r\n\r\n    const handleRoute = async (card: any) => {\r\n        let category = card.title.charAt(0).toUpperCase() + card.title.slice(1)\r\n        console.log(\"PUSH\", category)\r\n        console.log(\"id\", card.category_id)\r\n        history.push({\r\n            pathname: `/t/${category}`,\r\n            state: { category: card.category_id, header: category, dropdownState: category },\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-left\">\r\n                    <div className=\"image-container\">\r\n\r\n                        <img src={card.image} />\r\n\r\n                    </div>\r\n                    <div className=\"title-container\">\r\n                        <span onClick={() => handleRoute(card)}>{card.title.charAt(0).toUpperCase() + card.title.slice(1)}</span>\r\n                        <p>{card.details}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-right\">\r\n                    <div className=\"recent-threads-text\">\r\n                        <span>\r\n                            Recent Threads\r\n                        </span>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"recent-threads-container\">\r\n\r\n                        {card.threads.length === 0 ? <span>No threads currently posted.</span> :\r\n                            card.threads.map((thread) => {\r\n                                card.threads.length = 3\r\n                                return (\r\n                                    <div className=\"recent-thread\">\r\n\r\n                                        <span className=\"recent-thread-title\">{thread.thread_title}</span>\r\n                                        <Moment fromNow className=\"date\">{thread.date}</Moment>\r\n\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modal.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modalDropdown.tsx",["136","137","138"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport \"../modal/modal.scss\"\r\n\r\ninterface Props {\r\n    category: string\r\n    setCategory: React.Dispatch<React.SetStateAction<string>>\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 160,\r\n\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\nconst Dropdown: React.FC<Props> = ({ category, setCategory }) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: string }>) => {\r\n        setCategory(event.target.value);\r\n\r\n        console.log(\"event\", event.target.value)\r\n    };\r\n\r\n\r\n    console.log(\"this is the state\", category)\r\n\r\n    return (\r\n        <div className=\"modal-dropdown-container\">\r\n            <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                    value={category}\r\n                    onChange={handleChange}\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'age' }}\r\n                >\r\n                    <option value={0}>None</option>\r\n                    <option value={2}>Technology</option>\r\n                    <option value={1}>Fitness</option>\r\n                    <option value={3}>Science</option>\r\n                    <option value={6}>Finance</option>\r\n                    <option value={4}>Travel</option>\r\n                    <option value={5}>Books</option>\r\n                    <option value={7}>Politics</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Change Category</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\nexport default Dropdown","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useFetch.ts",[],["139","140"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\routes.js",["141","142"],"\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\r\nimport Navbar from \"./components/navbar/navbar\"\r\nimport Homepage from \"./pages/homepage\"\r\nimport ThreadResults from \"./pages/threadResults\"\r\nimport { createBrowserHistory } from \"history\";\r\nimport ThreadModal from \"./components/modal/modal\"\r\nimport Dropdown from \"./components/dropdown/dropdown\"\r\nimport Thread from \"./pages/thread\"\r\n\r\n\r\nfunction Routes() {\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState('All')\r\n    const [recents, setRecents] = useState([])\r\n\r\n    return (\r\n        <Router >\r\n            <div style={{ minHeight: '100%', width: \"100%\", display: \"flex\", alignItems: \"center\", flexDirection: 'column', backgroundColor: 'rgb(248, 248, 248)' }}>\r\n                <Navbar />\r\n                <Dropdown setOpen={setOpen} setState={setState} />\r\n                <ThreadModal open={open} setOpen={setOpen} />\r\n                < Switch >\r\n                    <Route path='/' component={Homepage} exact setState={setState} />\r\n                    <Route path=\"/t/:category\" render={(props) => (\r\n                        <ThreadResults {...props} setState={setState} state={state} recents={recents} setRecents={setRecents} />\r\n                    )} exact />\r\n                    <Route path='/t/:thread_id/:thread' component={Thread} exact setState={setState} recents={recents} setRecents={setRecents} />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Routes;","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\threadContext.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\threadReducer.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\threadResults.tsx",["143","144","145","146","147","148"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport \"./threadresults.scss\"\r\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport Threads from \"../components/threads/threads\"\r\nimport { ThreadContext } from \"../context/contexts/threadContext\"\r\nimport CategoryActions from \"../actions/actions\"\r\nimport Loading from \"../components/loading/loading\"\r\nimport TrendingCard from \"../components/trending/trendingCard\"\r\nimport RecentCard from \"../components/recentsCard/recentsCard\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\ninterface Props {\r\n    state: string,\r\n    setState: React.Dispatch<React.SetStateAction<string>>\r\n    thread: Thread\r\n    recents: any\r\n    setRecents: React.Dispatch<React.SetStateAction<[]>>\r\n}\r\n\r\nconst ThreadResults: React.FC<Props> = ({ state, setState, recents, setRecents }) => {\r\n    const location = useLocation<any>();\r\n    const match = useRouteMatch<any>();\r\n    const [header, setHeader] = useState(\"\")\r\n    const [image, setImage] = useState<string>(\"\")\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n    const { fetchThreads, fetchCategoryImage, fetchRecents, fetchThread } = CategoryActions();\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const history = useHistory();\r\n\r\n    const onMount = async () => {\r\n        await fetchThreads(location.state.category)\r\n        let image = await fetchCategoryImage(location.state.category)\r\n        setHeader(match.params.category)\r\n        setImage(image)\r\n        setState(match.params.category)\r\n\r\n        await pushRecentArray()\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    const pushRecentArray = async () => {\r\n\r\n        var storedNames = await JSON.parse(localStorage.getItem(\"names\") || '[]');\r\n\r\n\r\n        const some = (element: any) => element.title === match.params.category.toLowerCase();\r\n\r\n        if (storedNames.some(some)) {\r\n            setRecents(storedNames)\r\n\r\n        } else {\r\n            setTimeout(async () => {\r\n                let recent = await fetchRecents(match.params.category)\r\n\r\n                storedNames.push(recent)\r\n\r\n                localStorage.setItem(\"names\", JSON.stringify(storedNames));\r\n                setRecents(storedNames)\r\n\r\n            }, 1000);\r\n        }\r\n\r\n        console.log(\"storedddd\", storedNames)\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        onMount()\r\n\r\n        return () => {\r\n            threadDispatch({ type: 'CLEAR_RESULTS' });\r\n\r\n            setState(\"All\")\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"state changed\")\r\n        onMount()\r\n    }, [state])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? <Loading /> : <div className=\"thread-results-main\">\r\n                <div className=\"header-container\">\r\n                    <div className=\"header-left\">\r\n                        <div className=\"image-container\">\r\n                            <img src={image} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                        <span>{header}</span>\r\n                        <p>/t/{header}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"threads-bottom\">\r\n                    <div className=\"threads-container\">\r\n                        {threadData.threads.length === 0 ? <span style={{ textAlign: \"center\" }}>There are currently no threads.</span> :\r\n                            threadData.threads.map((thread: Thread, i: number) => (\r\n                                <>\r\n                                    <Threads thread={thread} i={i} image={image} />\r\n                                </>\r\n                            ))\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"trendings-container\">\r\n\r\n                        {threadData.threads.length === 0 ? null : <TrendingCard />}\r\n                        <RecentCard recents={recents} />\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThreadResults","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\threads\\threads.tsx",["149","150","151"],"import React, { useState, useContext, useRef } from 'react'\r\nimport Moment from 'react-moment';\r\nimport { FaCommentAlt } from 'react-icons/fa';\r\nimport { FaShare } from 'react-icons/fa';\r\nimport { FaLink } from 'react-icons/fa';\r\nimport { FaTimesCircle } from 'react-icons/fa';\r\nimport \"./threads.scss\"\r\nimport { ThreadContext } from \"../../context/contexts/threadContext\";\r\nimport useClickOutside from \"../../hooks/useClickOutside\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\ninterface Props {\r\n    thread: any;\r\n    i: number\r\n    image: string\r\n}\r\n\r\nconst Threads: React.FC<Props> = ({ thread, i, image }) => {\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n    const [dropId, setDropId] = useState(\"\")\r\n    const history = useHistory();\r\n    const ref = useRef<any>();\r\n    useClickOutside(ref, () => threadDispatch({ type: 'CLOSE_DROPDOWN', id: dropId }))\r\n\r\n\r\n    const handleShareToggle = (thread: any, i: number) => {\r\n        console.log(\"thread\", thread.thread_id)\r\n        let thread_id = thread.thread_id\r\n        console.log(\"thread index\", thread_id)\r\n        setDropId(thread_id)\r\n        threadDispatch({ type: 'OPEN_DROPDOWN', id: thread_id });\r\n\r\n    }\r\n\r\n    const handleCopyLink = (e: any, thread: any) => {\r\n        // console.log(\"thread clicked\", thread_id)\r\n\r\n        console.log(e.target)\r\n        let url = `http://localhost:3000/t/${thread.thread_id}/${thread.thread_title}`\r\n        navigator.clipboard.writeText(url)\r\n        setDropId(\"\")\r\n        threadDispatch({ type: 'CLOSE_DROPDOWN', id: thread.thread_id });\r\n    }\r\n\r\n    const handleCloseDropdown = (thread: any, i: number) => {\r\n        let thread_id = thread.thread_id\r\n        console.log(\"thread id\", thread_id)\r\n        setDropId(\"\")\r\n        threadDispatch({ type: 'CLOSE_DROPDOWN', id: thread_id });\r\n    }\r\n\r\n\r\n    const handleThreadRoute = async (thread: Thread) => {\r\n        let thread_id = thread.thread_id\r\n\r\n        history.push({\r\n            pathname: `/t/${thread_id}/${thread.thread_title}`,\r\n            state: { id: thread_id, image: image },\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"thread\" >\r\n                <div className=\"user-container\">\r\n                    <div className=\"image-container\">\r\n                        <img src={image} />\r\n                    </div>\r\n                    <span style={{ fontSize: \"13px\" }} >Posted by <span style={{ fontSize: \"13px\" }}>u/{thread.user}</span></span>\r\n                    <Moment fromNow className=\"date\" style={{ fontSize: \"13px\" }}>{thread.date}</Moment>\r\n                </div>\r\n                <div className=\"thread-title\">\r\n                    <span>{thread.thread_title}</span>\r\n                </div>\r\n                <div className=\"thread-body\" onClick={() => handleThreadRoute(thread)}>\r\n                    <p>{thread.body}</p>\r\n                </div>\r\n                <div className=\"thread-buttons\">\r\n                    <FaCommentAlt style={{ position: \"relative\", top: \"2px\", color: \"rgb(215, 46, 51)\", marginRight: \"3px\" }} /><span style={{ fontSize: \"14.5px\", position: \"relative\", top: \"0.5px\" }}> {thread.comments.length}</span> <span style={{ marginLeft: \"5px\" }} onClick={() => handleThreadRoute(thread)}>Comments </span>\r\n                    <FaShare style={{ position: \"relative\", top: \"2px\", color: \"rgb(215, 46, 51)\", marginLeft: \"20px\", marginRight: \"3px\" }} /> <span onClick={() => handleShareToggle(thread, i)}>Share</span>\r\n                </div>\r\n                {thread.sharing && <div ref={ref} className=\"dropdown\">\r\n                    <span className=\"copy-span\" style={{ fontSize: \"13px\" }} onClick={(e) => handleCopyLink(e, thread)}>\r\n                        <FaLink style={{ position: \"relative\", fontSize: \"12px\", top: \"2px\", right: \"4px\" }} /> Copy link\r\n                        </span>\r\n                    <span className=\"copy-span\" style={{ fontSize: \"13px\" }} onClick={(e) => handleCloseDropdown(thread, i)}>\r\n                        <FaTimesCircle style={{ position: \"relative\", fontSize: \"12px\", top: \"2px\", right: \"12px\" }} /> Cancel\r\n                        </span>\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Threads","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useClickOutside.js",["152","153","154"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction useClickOutside(ref, handler) {\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            // Do nothing if clicking ref's element or descendent elements\r\n            if (!ref.current || ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n\r\n            handler(event);\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", listener);\r\n        document.addEventListener(\"touchstart\", listener);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", listener);\r\n            document.removeEventListener(\"touchstart\", listener);\r\n        };\r\n    }, [ref, handler]);\r\n}\r\n\r\nexport default useClickOutside;","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\loading\\loading.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\trending\\trendingCard.tsx",["155","156","157"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport \"./trendingCard.scss\"\r\nimport Page from \"../../images/flame.svg\"\r\nimport { ThreadContext } from \"../../context/contexts/threadContext\"\r\nimport { FaCommentAlt } from 'react-icons/fa';\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst TrendingCard: React.FC<Props> = ({ }) => {\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n    const [state, setState] = useState([])\r\n\r\n    useEffect(() => {\r\n        setState(threadData.trendings)\r\n\r\n\r\n        return () => {\r\n            threadDispatch({ type: 'CLEAR_RESULTS' });\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"trending-card\">\r\n                <div className=\"trending-card-header\">\r\n                    <img src={Page} />\r\n                    <span>Trending Threads</span>\r\n                </div>\r\n                <div className=\"trendings-bottom-container\">\r\n                    {state.map((item: any) => {\r\n                        state.length = 5\r\n\r\n                        return (\r\n                            <div className=\"trend\">\r\n                                <div className=\"trend-content\">\r\n                                    <FaCommentAlt className=\"comment-icon\" />\r\n                                    <span style={{ fontSize: \"14px\", marginLeft: \"5px\", marginTop: \"2px\" }}>{item.comments.length}</span>\r\n                                    <span className=\"title\">{item.thread_title}</span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrendingCard","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\recentsCard\\recentsCard.tsx",["158"],"import React from 'react'\r\nimport \"./recentsCard.scss\"\r\n\r\ninterface Props {\r\n    recents: string[]\r\n}\r\n\r\nconst RecentCard: React.FC<Props> = ({ recents }) => {\r\n    return (\r\n        <>\r\n            <div className=\"recent-card\">\r\n                <div className=\"recent-header\">\r\n                    <span>Recents</span>\r\n\r\n                </div>\r\n                <div className=\"recents-container\">\r\n                    {recents.map((recent: any) => {\r\n                        recents.length = 5\r\n                        return (\r\n                            <div className=\"recent\">\r\n                                <div className=\"image-container\">\r\n                                    <div className=\"recent-image-container\">\r\n\r\n                                        <img src={recent.image} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"title-container\">\r\n                                    <span>t/{recent.title.charAt(0).toUpperCase() + recent.title.slice(1)}</span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecentCard","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\thread.tsx",["159","160","161","162","163","164","165","166","167"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\categoryCard\\categoryCard.tsx",["168","169","170"],"import React, { useState, useEffect } from 'react'\r\nimport \"./categoryCard.scss\"\r\nimport Moment from 'react-moment';\r\n\r\ninterface Props {\r\n    image: string\r\n    details: string\r\n    title: string\r\n    count: number\r\n    date: string\r\n\r\n\r\n}\r\n\r\nconst CategoryCard: React.FC<Props> = ({ image, title, count, date, details }) => {\r\n\r\n\r\n    console.log(\"date\", date)\r\n    return (\r\n        <>\r\n            <div className=\"category-card\">\r\n                <div className=\"category-card-header\">\r\n\r\n                </div>\r\n                <div className=\"category-card-title-container\">\r\n                    <div className=\"title-header\">\r\n                        <div className=\"image-container\">\r\n                            <img src={image} />\r\n                        </div>\r\n\r\n                        <span>/t/{title.charAt(0).toUpperCase() + title.slice(1)}</span>\r\n                    </div>\r\n                    <p>{details}</p>\r\n                </div>\r\n                <div className=\"bottom-header-container\">\r\n                    <div className=\"count-container\">\r\n                        <span>{count}</span>\r\n                        <span>Threads</span>\r\n                    </div>\r\n                    <div className=\"date-container\">\r\n                        <span>Last Thread Posted</span><Moment fromNow className=\"date\" style={{ fontSize: \"13px\" }}>{date}</Moment>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryCard","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\sortdropdown\\sort.tsx",["171","172"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 70,\r\n            height: 50,\r\n            fontSize: \"10px\",\r\n            padding: \"0px\",\r\n\r\n\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n            padding: \"0px\",\r\n            // backgroundColor: \"green\",\r\n            height: 20,\r\n            fontSize: \"14px\"\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function NativeSelects() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState<{ age: string | number; name: string }>({\r\n        age: '',\r\n        name: 'hai',\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as keyof typeof state;\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <FormControl className={classes.formControl}>\r\n            <NativeSelect\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                name=\"age\"\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'age' }}\r\n            >\r\n                <option value=\"\">New</option>\r\n                <option value={10}>Top</option>\r\n                <option value={20}>Old</option>\r\n            </NativeSelect>\r\n            <FormHelperText>Sort by</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\comment.tsx",["173","174","175","176","177","178"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\reply.tsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":10,"column":31,"nodeType":"189","messageId":"190","endLine":10,"endColumn":34},{"ruleId":"183","severity":1,"message":"191","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":9,"column":34,"nodeType":"189","messageId":"190","endLine":9,"endColumn":37},{"ruleId":"183","severity":1,"message":"192","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":30,"column":8,"nodeType":"196","endLine":30,"endColumn":10,"suggestions":"197"},{"ruleId":"183","severity":1,"message":"198","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"199","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"200","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":16},{"ruleId":"183","severity":1,"message":"201","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":23},{"ruleId":"183","severity":1,"message":"191","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":7,"column":39,"nodeType":"185","messageId":"186","endLine":7,"endColumn":49},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"204","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":24},{"ruleId":"183","severity":1,"message":"191","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":35,"column":25,"nodeType":"207","endLine":35,"endColumn":49},{"ruleId":"183","severity":1,"message":"198","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"199","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"208","line":8,"column":10,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},{"ruleId":"179","replacedBy":"209"},{"ruleId":"181","replacedBy":"210"},{"ruleId":"202","severity":1,"message":"211","line":3,"column":50,"nodeType":"185","messageId":"186","endLine":3,"endColumn":60},{"ruleId":"202","severity":1,"message":"212","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":30},{"ruleId":"183","severity":1,"message":"191","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":14},{"ruleId":"183","severity":1,"message":"213","line":27,"column":61,"nodeType":"185","messageId":"186","endLine":27,"endColumn":72},{"ruleId":"183","severity":1,"message":"214","line":29,"column":11,"nodeType":"185","messageId":"186","endLine":29,"endColumn":18},{"ruleId":"194","severity":1,"message":"215","line":81,"column":8,"nodeType":"196","endLine":81,"endColumn":10,"suggestions":"216"},{"ruleId":"194","severity":1,"message":"217","line":86,"column":8,"nodeType":"196","endLine":86,"endColumn":15,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"206","line":97,"column":29,"nodeType":"207","endLine":97,"endColumn":48},{"ruleId":"183","severity":1,"message":"191","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":14},{"ruleId":"183","severity":1,"message":"203","line":20,"column":39,"nodeType":"185","messageId":"186","endLine":20,"endColumn":49},{"ruleId":"205","severity":1,"message":"206","line":71,"column":25,"nodeType":"207","endLine":71,"endColumn":44},{"ruleId":"202","severity":1,"message":"219","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"220","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":44},{"ruleId":"187","severity":1,"message":"188","line":12,"column":40,"nodeType":"189","messageId":"190","endLine":12,"endColumn":43},{"ruleId":"194","severity":1,"message":"221","line":24,"column":8,"nodeType":"196","endLine":24,"endColumn":10,"suggestions":"222"},{"ruleId":"205","severity":1,"message":"206","line":32,"column":21,"nodeType":"207","endLine":32,"endColumn":39},{"ruleId":"205","severity":1,"message":"206","line":24,"column":41,"nodeType":"207","endLine":24,"endColumn":67},{"ruleId":"183","severity":1,"message":"191","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":14},{"ruleId":"183","severity":1,"message":"223","line":14,"column":10,"nodeType":"185","messageId":"186","endLine":14,"endColumn":24},{"ruleId":"183","severity":1,"message":"224","line":30,"column":26,"nodeType":"185","messageId":"186","endLine":30,"endColumn":38},{"ruleId":"183","severity":1,"message":"214","line":31,"column":11,"nodeType":"185","messageId":"186","endLine":31,"endColumn":18},{"ruleId":"183","severity":1,"message":"225","line":32,"column":11,"nodeType":"185","messageId":"186","endLine":32,"endColumn":19},{"ruleId":"183","severity":1,"message":"226","line":34,"column":20,"nodeType":"185","messageId":"186","endLine":34,"endColumn":29},{"ruleId":"183","severity":1,"message":"227","line":42,"column":20,"nodeType":"185","messageId":"186","endLine":42,"endColumn":29},{"ruleId":"194","severity":1,"message":"217","line":110,"column":8,"nodeType":"196","endLine":110,"endColumn":10,"suggestions":"228"},{"ruleId":"205","severity":1,"message":"206","line":124,"column":33,"nodeType":"207","endLine":124,"endColumn":52},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"229","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"206","line":28,"column":29,"nodeType":"207","endLine":28,"endColumn":48},{"ruleId":"183","severity":1,"message":"198","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"199","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"220","line":1,"column":39,"nodeType":"185","messageId":"186","endLine":1,"endColumn":45},{"ruleId":"183","severity":1,"message":"230","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":17},{"ruleId":"183","severity":1,"message":"203","line":23,"column":39,"nodeType":"185","messageId":"186","endLine":23,"endColumn":49},{"ruleId":"183","severity":1,"message":"231","line":27,"column":12,"nodeType":"185","messageId":"186","endLine":27,"endColumn":23},{"ruleId":"183","severity":1,"message":"232","line":27,"column":25,"nodeType":"185","messageId":"186","endLine":27,"endColumn":39},{"ruleId":"183","severity":1,"message":"225","line":28,"column":11,"nodeType":"185","messageId":"186","endLine":28,"endColumn":19},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Link' is defined but never used.","'Dropdown' is defined but never used.","'ThreadModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.","ArrayExpression",["235"],"'InputLabel' is defined but never used.","'Select' is defined but never used.","'useFetch' is defined but never used.","'CategoryActions' is defined but never used.","no-unused-vars","'threadData' is assigned a value but never used.","'triggerAsyncId' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GoPlus' is defined but never used.",["233"],["234"],"'withRouter' is defined but never used.","'createBrowserHistory' is defined but never used.","'fetchThread' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onMount', 'setState', and 'threadDispatch'. Either include them or remove the dependency array. If 'setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"React Hook useEffect has a missing dependency: 'onMount'. Either include it or remove the dependency array.",["237"],"'React' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'threadData.trendings' and 'threadDispatch'. Either include them or remove the dependency array.",["238"],"'ToastContainer' is defined but never used.","'fetchRecents' is assigned a value but never used.","'location' is assigned a value but never used.","'setThread' is assigned a value but never used.","'setDropId' is assigned a value but never used.",["239"],"'useEffect' is defined but never used.","'FaShare' is defined but never used.","'openReplies' is assigned a value but never used.","'setRepliesOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [fetchCategories]",{"range":"250","text":"251"},"Update the dependencies array to be: [onMount, setState, threadDispatch]",{"range":"252","text":"253"},"Update the dependencies array to be: [onMount, state]",{"range":"254","text":"255"},"Update the dependencies array to be: [threadData.trendings, threadDispatch]",{"range":"256","text":"257"},"Update the dependencies array to be: [onMount]",{"range":"258","text":"259"},[868,870],"[fetchCategories]",[2527,2529],"[onMount, setState, threadDispatch]",[2621,2628],"[onMount, state]",[629,631],"[threadData.trendings, threadDispatch]",[3753,3755],"[onMount]"]