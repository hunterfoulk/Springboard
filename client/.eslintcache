[{"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\index.tsx":"1","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\App.tsx":"2","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\navbar\\navbar.tsx":"3","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\homepage.tsx":"4","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\dropdown\\dropdown.tsx":"5","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\actions\\actions.js":"6","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\cards\\cards.tsx":"7","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modal.tsx":"8","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modalDropdown.tsx":"9","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useFetch.ts":"10","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\routes.js":"11","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\threadContext.tsx":"12","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\threadReducer.tsx":"13","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\threadResults.tsx":"14","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\threads\\threads.tsx":"15","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useClickOutside.js":"16","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\loading\\loading.tsx":"17","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\trending\\trendingCard.tsx":"18","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\recentsCard\\recentsCard.tsx":"19","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\thread.tsx":"20","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\categoryCard\\categoryCard.tsx":"21","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\sortdropdown\\sort.tsx":"22","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\comment.tsx":"23","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\reply.tsx":"24","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\switch\\themeSwitch.js":"25","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\themeContext.tsx":"26","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\themeReducer.tsx":"27","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\loading\\navLoader.tsx":"28","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\search.tsx":"29","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\searchContext.tsx":"30","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\searchReducer.tsx":"31"},{"size":223,"mtime":1607728231072,"results":"32","hashOfConfig":"33"},{"size":621,"mtime":1613491881712,"results":"34","hashOfConfig":"33"},{"size":6080,"mtime":1613510292002,"results":"35","hashOfConfig":"33"},{"size":1647,"mtime":1612388435094,"results":"36","hashOfConfig":"33"},{"size":6263,"mtime":1613594646990,"results":"37","hashOfConfig":"33"},{"size":4528,"mtime":1613494690747,"results":"38","hashOfConfig":"33"},{"size":2917,"mtime":1613594111399,"results":"39","hashOfConfig":"33"},{"size":4701,"mtime":1613104654381,"results":"40","hashOfConfig":"33"},{"size":2230,"mtime":1613496712774,"results":"41","hashOfConfig":"33"},{"size":786,"mtime":1607985808894,"results":"42","hashOfConfig":"33"},{"size":1916,"mtime":1613583752409,"results":"43","hashOfConfig":"33"},{"size":676,"mtime":1609368255164,"results":"44","hashOfConfig":"33"},{"size":3415,"mtime":1612290995013,"results":"45","hashOfConfig":"33"},{"size":4491,"mtime":1613580731339,"results":"46","hashOfConfig":"33"},{"size":4344,"mtime":1612988404654,"results":"47","hashOfConfig":"33"},{"size":750,"mtime":1608154161689,"results":"48","hashOfConfig":"33"},{"size":677,"mtime":1613408086921,"results":"49","hashOfConfig":"33"},{"size":2248,"mtime":1613593900403,"results":"50","hashOfConfig":"33"},{"size":1569,"mtime":1613594105008,"results":"51","hashOfConfig":"33"},{"size":7898,"mtime":1613583553449,"results":"52","hashOfConfig":"33"},{"size":1684,"mtime":1612470611678,"results":"53","hashOfConfig":"33"},{"size":2786,"mtime":1612459174336,"results":"54","hashOfConfig":"33"},{"size":4643,"mtime":1612475906447,"results":"55","hashOfConfig":"33"},{"size":813,"mtime":1611767527865,"results":"56","hashOfConfig":"33"},{"size":1509,"mtime":1612459488268,"results":"57","hashOfConfig":"33"},{"size":817,"mtime":1613491728265,"results":"58","hashOfConfig":"33"},{"size":325,"mtime":1612291154695,"results":"59","hashOfConfig":"33"},{"size":650,"mtime":1613408101387,"results":"60","hashOfConfig":"33"},{"size":5125,"mtime":1613583440766,"results":"61","hashOfConfig":"33"},{"size":597,"mtime":1613491663171,"results":"62","hashOfConfig":"33"},{"size":946,"mtime":1613504694524,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"11ham0i",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\index.tsx",[],["140","141"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\App.tsx",["142","143"],"import React, { useState } from 'react';\nimport Routes from \"./routes\"\nimport { ThreadContextProvider } from \"./context/contexts/threadContext\"\nimport { ThemeContextProvider } from \"./context/contexts/themeContext\"\nimport { SearchContextProvider } from \"./context/contexts/searchContext\"\n\n\ninterface Props {\n\n}\n\nconst App: React.FC<Props> = ({ }) => {\n\n\n  return (\n    <>\n      <ThemeContextProvider>\n        <ThreadContextProvider>\n          <SearchContextProvider>\n            <Routes />\n          </SearchContextProvider>\n        </ThreadContextProvider>\n      </ThemeContextProvider>\n    </>\n  )\n}\n\nexport default App","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\navbar\\navbar.tsx",["144","145","146"],"import React, { useContext, useState } from 'react'\r\nimport \"./navbar.scss\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ThemeSwitch from \"../switch/themeSwitch\"\r\nimport { ThemeContext } from \"../../context/contexts/themeContext\"\r\nimport { IoMdSearch } from 'react-icons/io';\r\nimport { IoIosCloseCircleOutline } from 'react-icons/io';\r\nimport { AiFillThunderbolt } from 'react-icons/ai';\r\nimport { IoMdTrendingUp } from 'react-icons/io';\r\nimport { GiBouncingSpring } from 'react-icons/gi';\r\nimport categoryActions from \"../../actions/actions\"\r\nimport Loading from \"../loading/navLoader\"\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Navbar: React.FC<Props> = ({ }) => {\r\n\r\n    const { dispatch: themeDispatch, themeData } = useContext(ThemeContext);\r\n    const [term, setTerm] = useState(\"\")\r\n    const { fetchTrends } = categoryActions();\r\n    const [trends, setTrends] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [typing, setTyping] = useState(false)\r\n    const history = useHistory();\r\n    const isMobile = window.innerWidth < 750\r\n\r\n    const home = () => {\r\n        history.push({\r\n            pathname: `/`,\r\n\r\n        });\r\n    }\r\n\r\n    const handleThemeChange = () => {\r\n        localStorage.setItem(\"theme\", themeData.theme === \"light\" ? \"dark\" : \"light\")\r\n        themeDispatch({\r\n            type: \"CHANGE_THEME\",\r\n            theme: themeData.theme === \"light\" ? \"dark\" : \"light\",\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = async (event: React.ChangeEvent<{ value: string }>) => {\r\n        setTerm(event.target.value);\r\n        if (window.innerWidth > 750) {\r\n\r\n\r\n            if (typing === false) {\r\n                setTyping(true)\r\n\r\n                const trendingArr = await fetchTrends()\r\n                console.log(\"trendings\", trendingArr)\r\n\r\n                setLoading(false)\r\n                setTrends(trendingArr)\r\n            }\r\n        } else {\r\n            return\r\n        }\r\n        console.log(\"event\", event.target.value)\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleThreadRoute = async (trend: any) => {\r\n        let thread_id = trend.thread_id\r\n        setTerm(\"\")\r\n        history.push({\r\n            pathname: `/t/${thread_id}/${trend.thread_title}`,\r\n            state: { id: thread_id, image: trend.image },\r\n\r\n        });\r\n    }\r\n\r\n    const handleTermClick = async () => {\r\n        setTerm(\"\")\r\n        history.push({\r\n            pathname: `/search/${term}`,\r\n            state: { term: term },\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`navbar-${themeData.theme}`}>\r\n                <div className=\"nav-left\">\r\n                    {isMobile ? <span style={{ cursor: \"pointer\", fontSize: \"35px\", marginLeft: \"15px\", position: \"relative\", top: \"2px\", left: \"5px\" }} onClick={home}><GiBouncingSpring /></span> : <span style={{ cursor: \"pointer\", marginLeft: \"15px\" }} onClick={home}>Springboard</span>}\r\n\r\n                </div>\r\n                <div className=\"nav-middle\">\r\n                    <form onSubmit={() => handleTermClick()}>\r\n                        <input type=\"text\" value={term} onChange={handleChange} />\r\n                    </form>\r\n                    {term !== \"\" && window.innerWidth > 750 && <div className=\"search-dropdown\">\r\n                        <div className=\"term-container\">\r\n                            <div className=\"term-icon-container\">\r\n                                <span><IoMdSearch /></span>\r\n                            </div>\r\n                            <div className=\"term-text-container\" onClick={() => handleTermClick()}>\r\n                                <span>\r\n                                    {term}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"close-term-container\">\r\n                                <span><IoIosCloseCircleOutline onClick={() => setTerm(\"\")} /></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"trending-header\">\r\n                            <span className=\"trending-icon\"><AiFillThunderbolt /></span>\r\n                            <span>Trending Threads</span>\r\n                        </div>\r\n                        <div className=\"trends-container\">\r\n                            {loading ? <Loading /> : <div className=\"trend-container\">{trends.map((trend: any) => (\r\n                                <div className=\"trend\" onClick={() => handleThreadRoute(trend)}>\r\n                                    <div className=\"trend-title\">\r\n                                        <span className=\"trend-chart-icon\">\r\n                                            <IoMdTrendingUp />\r\n                                        </span>\r\n                                        <span>\r\n                                            {trend.thread_title}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"trend-body\">\r\n                                        <span>{trend.body}</span>\r\n                                    </div>\r\n                                    <div className=\"trend-footer\">\r\n                                        <div className=\"image-container\">\r\n                                            <img src={trend.image} />\r\n                                        </div>\r\n                                        <span>t/{trend.title.charAt(0).toUpperCase() + trend.title.slice(1)}</span>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            ))}</div>}\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                <div className=\"nav-right\">\r\n\r\n                    <ThemeSwitch\r\n                        size=\"medium\"\r\n                        onChange={handleThemeChange}\r\n                        checked={themeData.theme === \"light\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\homepage.tsx",["147","148","149","150"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport \"./homepage.scss\"\r\nimport Dropdown from \"../components/dropdown/dropdown\"\r\nimport Card from \"../components/cards/cards\"\r\nimport CategoryActions from \"../actions/actions\"\r\nimport ThreadModal from \"../components/modal/modal\"\r\nimport Loading from \"../components/loading/loading\"\r\nimport { ThemeContext } from \"../context/contexts/themeContext\"\r\n\r\ninterface Props {\r\n    setState: React.Dispatch<React.SetStateAction<string>>\r\n\r\n}\r\n\r\nconst Homepage: React.FC<Props> = ({ setState }) => {\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const { getCategories } = CategoryActions();\r\n    const [loading, setLoading] = useState(true)\r\n    const { dispatch: themeDispatch, themeData, } = useContext(ThemeContext);\r\n\r\n    async function fetchCategories() {\r\n        const response = await getCategories();\r\n        setCategories(response)\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchCategories()\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(\"categories\", categories)\r\n    return (\r\n        <>\r\n            {loading ? <Loading /> : <div className=\"homepage-main\">\r\n                <div className=\"h1-container\">\r\n                    <h1 style={{ color: themeData.theme === 'dark' ? \"#c9d1d9\" : \"black\" }}>Topics</h1>\r\n\r\n                </div>\r\n                <div className=\"cards-main\">\r\n                    {categories.map((card, i) => (\r\n\r\n                        <Card card={card} setState={setState} />\r\n\r\n                    ))}\r\n                </div>\r\n\r\n\r\n\r\n            </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\dropdown\\dropdown.tsx",["151","152","153","154","155","156"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\actions\\actions.js",["157","158"],"import axios from \"axios\";\r\nimport { ThreadContext } from \"../context/contexts/threadContext\";\r\nimport { SearchContext } from \"../context/contexts/searchContext\";\r\nimport { useContext } from 'react';\r\n\r\n\r\nexport default function CategoryActions() {\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n    const { dispatch: searchDispatch, searchData } = useContext(SearchContext);\r\n\r\n    async function getCategories() {\r\n        const response = await axios.get(\"http://localhost:8000/all\")\r\n        let data = response.data\r\n        return data;\r\n    }\r\n\r\n    async function createThread(payload) {\r\n        await axios\r\n            .post(\"http://localhost:8000/createThread\", {\r\n                title: payload.title,\r\n                body: payload.body,\r\n                category: payload.category,\r\n            })\r\n            .then(() => {\r\n                console.log(\"data sent\");\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    async function fetchThreads(term) {\r\n\r\n        try {\r\n            console.log(\"fired\", term)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchThreads\", { params: { term: term } });\r\n            let threads = response.data\r\n\r\n            threadDispatch({ type: 'UPDATE_THREADS', threads: threads });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function fetchCategoryImage(term) {\r\n\r\n        try {\r\n            console.log(\"IMAGE fired\")\r\n            const response = await axios.get(\"http://localhost:8000/fetchCategoryImage\", { params: { term: term } });\r\n            let header = response.data\r\n            console.log(\"HEADER\", header)\r\n            return header\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function fetchRecents(term) {\r\n\r\n        try {\r\n            console.log(\"fired term \", term)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchRecents\", { params: { term: term } });\r\n            let recents = response.data\r\n            return recents\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function fetchThread(id) {\r\n\r\n        try {\r\n            console.log(\"FETCH THREAD FIRED\", id)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchThread\", { params: { id: id } });\r\n            let recents = response.data\r\n            return recents\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function createComment(payload) {\r\n        await axios\r\n            .post(\"http://localhost:8000/createComment\", {\r\n                message: payload.comment,\r\n                thread_id: payload.thread_id\r\n            })\r\n            .then(() => {\r\n                console.log(\"comment created!\");\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    async function createReply(payload) {\r\n        await axios\r\n            .post(\"http://localhost:8000/createReply\", {\r\n                message: payload.message,\r\n                comment_id: payload.comment_id,\r\n                id: payload.thread_id\r\n            })\r\n            .then((res) => {\r\n                // console.log(\"comment created!\");\r\n                console.log(\"new comments\", res.data.comments)\r\n                threadDispatch({ type: 'SET_COMMENTS', comments: res.data.comments })\r\n\r\n\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    async function fetchTrends() {\r\n\r\n        try {\r\n            console.log(\"trending dropdown fired\")\r\n\r\n            const response = await axios.get(\"http://localhost:8000/fetchTrends\")\r\n            let trendings = response.data\r\n            return trendings\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async function searchThreads(term) {\r\n\r\n        try {\r\n            console.log(\"term\", term)\r\n\r\n            const response = await axios.get(\"http://localhost:8000/search\", { params: { term: term } });\r\n            searchDispatch({ type: 'SET_SEARCH_RESULTS', searchResults: response.data });\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return {\r\n        getCategories,\r\n        createThread,\r\n        fetchThreads,\r\n        fetchCategoryImage,\r\n        fetchRecents,\r\n        fetchThread,\r\n        createComment,\r\n        createReply,\r\n        fetchTrends,\r\n        searchThreads\r\n    }\r\n}\r\n\r\n",["159","160"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\cards\\cards.tsx",["161","162","163","164"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modal.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\modal\\modalDropdown.tsx",["165","166","167"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport \"../modal/modal.scss\"\r\n\r\ninterface Props {\r\n    category: string\r\n    setCategory: React.Dispatch<React.SetStateAction<string>>\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 160,\r\n\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\nconst Dropdown: React.FC<Props> = ({ category, setCategory }) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: string }>) => {\r\n        setCategory(event.target.value);\r\n\r\n        console.log(\"event\", event.target.value)\r\n    };\r\n\r\n\r\n    console.log(\"this is the state\", category)\r\n\r\n    return (\r\n        <div className=\"modal-dropdown-container\">\r\n            <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                    value={category}\r\n                    onChange={handleChange}\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'age' }}\r\n                >\r\n                    <option value={0}>None</option>\r\n                    <option value={2}>Technology</option>\r\n                    <option value={1}>Fitness</option>\r\n                    <option value={3}>Science</option>\r\n                    <option value={6}>Finance</option>\r\n                    <option value={4}>Travel</option>\r\n                    <option value={5}>Books</option>\r\n                    <option value={8}>Programming</option>\r\n                    <option value={9}>Art</option>\r\n\r\n                </NativeSelect>\r\n                <FormHelperText>Change Category</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\nexport default Dropdown","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useFetch.ts",[],["168","169"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\routes.js",["170","171","172"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\threadContext.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\threadReducer.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\threadResults.tsx",["173","174","175","176","177","178","179","180"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\threads\\threads.tsx",["181","182","183","184"],"import React, { useState, useContext, useRef } from 'react'\r\nimport Moment from 'react-moment';\r\nimport { FaCommentAlt } from 'react-icons/fa';\r\nimport { FaShare } from 'react-icons/fa';\r\nimport { FaLink } from 'react-icons/fa';\r\nimport { FaTimesCircle } from 'react-icons/fa';\r\nimport \"./threads.scss\"\r\nimport { ThreadContext } from \"../../context/contexts/threadContext\";\r\nimport { ThemeContext } from \"../../context/contexts/themeContext\";\r\nimport useClickOutside from \"../../hooks/useClickOutside\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\ninterface Props {\r\n    thread: any;\r\n    i: number\r\n    image: string\r\n}\r\n\r\nconst Threads: React.FC<Props> = ({ thread, i, image }) => {\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n    const { dispatch: themeDispatch, themeData } = useContext(ThemeContext);\r\n    const [dropId, setDropId] = useState(\"\")\r\n    const history = useHistory();\r\n    const ref = useRef<any>();\r\n    useClickOutside(ref, () => threadDispatch({ type: 'CLOSE_DROPDOWN', id: dropId }))\r\n\r\n\r\n    const handleShareToggle = (thread: any, i: number) => {\r\n        console.log(\"thread\", thread.thread_id)\r\n        let thread_id = thread.thread_id\r\n        console.log(\"thread index\", thread_id)\r\n        setDropId(thread_id)\r\n        threadDispatch({ type: 'OPEN_DROPDOWN', id: thread_id });\r\n\r\n    }\r\n\r\n    const handleCopyLink = (e: any, thread: any) => {\r\n        // console.log(\"thread clicked\", thread_id)\r\n\r\n        console.log(e.target)\r\n        let url = `http://localhost:3000/t/${thread.thread_id}/${thread.thread_title}`\r\n        navigator.clipboard.writeText(url)\r\n        setDropId(\"\")\r\n        threadDispatch({ type: 'CLOSE_DROPDOWN', id: thread.thread_id });\r\n    }\r\n\r\n    const handleCloseDropdown = (thread: any, i: number) => {\r\n        let thread_id = thread.thread_id\r\n        console.log(\"thread id\", thread_id)\r\n        setDropId(\"\")\r\n        threadDispatch({ type: 'CLOSE_DROPDOWN', id: thread_id });\r\n    }\r\n\r\n\r\n    const handleThreadRoute = async (thread: Thread) => {\r\n        let thread_id = thread.thread_id\r\n\r\n        history.push({\r\n            pathname: `/t/${thread_id}/${thread.thread_title}`,\r\n            state: { id: thread_id, image: image },\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`thread-${themeData.theme}`} >\r\n                <div className=\"user-container\">\r\n                    <div className=\"image-container\">\r\n                        <img src={image} />\r\n                    </div>\r\n                    <span  >Posted by <span >u/{thread.user}</span></span>\r\n                    <Moment fromNow className=\"date\">{thread.date}</Moment>\r\n                </div>\r\n                <div className=\"thread-title\">\r\n                    <span>{thread.thread_title}</span>\r\n                </div>\r\n                <div className=\"thread-body\" onClick={() => handleThreadRoute(thread)}>\r\n                    <p>{thread.body}</p>\r\n                </div>\r\n                <div className=\"thread-buttons\">\r\n                    <FaCommentAlt style={{ position: \"relative\", top: \"2px\", color: \"rgb(215, 46, 51)\", marginRight: \"3px\" }} /><span style={{ fontSize: \"14.5px\", position: \"relative\", top: \"0.5px\" }}> {thread.comments.length}</span> <span style={{ marginLeft: \"5px\" }} onClick={() => handleThreadRoute(thread)}>Comments </span>\r\n                    <FaShare style={{ position: \"relative\", top: \"2px\", color: \"rgb(215, 46, 51)\", marginLeft: \"20px\", marginRight: \"3px\" }} /> <span onClick={() => handleShareToggle(thread, i)}>Share</span>\r\n                </div>\r\n                {thread.sharing && <div ref={ref} className=\"dropdown\">\r\n                    <span className=\"copy-span\" style={{ fontSize: \"13px\" }} onClick={(e) => handleCopyLink(e, thread)}>\r\n                        <FaLink style={{ position: \"relative\", fontSize: \"12px\", top: \"2px\", right: \"4px\" }} /> Copy link\r\n                        </span>\r\n                    <span className=\"copy-span\" style={{ fontSize: \"13px\" }} onClick={(e) => handleCloseDropdown(thread, i)}>\r\n                        <FaTimesCircle style={{ position: \"relative\", fontSize: \"12px\", top: \"2px\", right: \"12px\" }} /> Cancel\r\n                        </span>\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Threads","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\hooks\\useClickOutside.js",["185","186","187"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction useClickOutside(ref, handler) {\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            // Do nothing if clicking ref's element or descendent elements\r\n            if (!ref.current || ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n\r\n            handler(event);\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", listener);\r\n        document.addEventListener(\"touchstart\", listener);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", listener);\r\n            document.removeEventListener(\"touchstart\", listener);\r\n        };\r\n    }, [ref, handler]);\r\n}\r\n\r\nexport default useClickOutside;","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\loading\\loading.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\trending\\trendingCard.tsx",["188","189","190","191","192"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\recentsCard\\recentsCard.tsx",["193","194","195","196"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\thread.tsx",["197","198","199","200","201","202","203","204","205","206","207"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\categoryCard\\categoryCard.tsx",["208","209","210","211"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport \"./categoryCard.scss\"\r\nimport Moment from 'react-moment';\r\nimport { ThemeContext } from \"../../context/contexts/themeContext\"\r\n\r\ninterface Props {\r\n    image: string\r\n    details: string\r\n    title: string\r\n    count: number\r\n    date: string\r\n\r\n\r\n}\r\n\r\nconst CategoryCard: React.FC<Props> = ({ image, title, count, date, details }) => {\r\n    const { dispatch: themeDispatch, themeData, } = useContext(ThemeContext);\r\n\r\n\r\n    console.log(\"date\", date)\r\n    return (\r\n        <>\r\n            <div className={`category-card-${themeData.theme}`}>\r\n                <div className=\"category-card-header\">\r\n\r\n                </div>\r\n                <div className=\"category-card-title-container\">\r\n                    <div className=\"title-header\">\r\n                        <div className=\"image-container\">\r\n                            <img src={image} />\r\n                        </div>\r\n\r\n                        <span>/t/{title.charAt(0).toUpperCase() + title.slice(1)}</span>\r\n                    </div>\r\n                    <p>{details}</p>\r\n                </div>\r\n                <div className=\"bottom-header-container\">\r\n                    <div className=\"count-container\">\r\n                        <span>{count}</span>\r\n                        <span>Threads</span>\r\n                    </div>\r\n                    <div className=\"date-container\">\r\n                        <span>Last Thread Posted</span><Moment fromNow className=\"date\" style={{ fontSize: \"13px\" }}>{date}</Moment>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryCard","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\sortdropdown\\sort.tsx",["212","213","214","215","216"],"import React, { useContext, useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { ThreadContext } from \"../../context/contexts/threadContext\"\r\nimport { ThemeContext } from \"../../context/contexts/themeContext\"\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 70,\r\n            height: 50,\r\n            fontSize: \"10px\",\r\n            padding: \"0px\",\r\n\r\n\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n            padding: \"0px\",\r\n            // backgroundColor: \"green\",\r\n            height: 20,\r\n            fontSize: \"14px\"\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function NativeSelects() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState<{ age: string | number; name: string }>({\r\n        age: '',\r\n        name: 'hai',\r\n    });\r\n    const { dispatch: threadDispatch, threadData } = useContext(ThreadContext);\r\n    const { dispatch: themeDispatch, themeData } = useContext(ThemeContext);\r\n\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as keyof typeof state;\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.value,\r\n        });\r\n\r\n        switch (event.target.value) {\r\n            case \"New\":\r\n                console.log(\"NEW FIRED\")\r\n\r\n\r\n                threadDispatch({ type: 'SORT_COMMENTS_DATE' })\r\n\r\n                break;\r\n            case \"Top\":\r\n                console.log(\"TOP FIRED\")\r\n                threadDispatch({ type: 'SORT_COMMENTS_REPLIES' })\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <FormControl className={classes.formControl}>\r\n            <NativeSelect\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                name=\"age\"\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'age' }}\r\n                style={{ color: themeData.theme === \"dark\" ? ' grey' : \"black\" }}\r\n            >\r\n                <option value=\"Top\">Top</option>\r\n                <option value=\"New\">New</option>\r\n\r\n            </NativeSelect>\r\n            <FormHelperText style={{ color: themeData.theme === \"dark\" ? ' grey' : \"black\" }}>Sort by</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\comment.tsx",["217","218","219","220","221","222","223"],"import React, { useState, useContext, useRef } from 'react'\r\nimport { FaCommentAlt } from 'react-icons/fa';\r\nimport { FaShare } from 'react-icons/fa';\r\nimport { MdReportProblem } from 'react-icons/md';\r\nimport { GoComment } from 'react-icons/go';\r\nimport Moment from 'react-moment';\r\nimport { ThreadContext } from \"../../context/contexts/threadContext\"\r\nimport { ThemeContext } from \"../../context/contexts/themeContext\"\r\nimport \"./comment.scss\"\r\nimport CategoryActions from \"../../actions/actions\"\r\nimport Reply from \"../comment/reply\"\r\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\n\r\n\r\ninterface Props {\r\n    comment: Comment\r\n}\r\n\r\n\r\n\r\n\r\nconst Comment: React.FC<Props> = ({ comment }) => {\r\n    const { dispatch: threadDispatch, threadData, } = useContext(ThreadContext);\r\n    const { dispatch: themeDispatch, themeData } = useContext(ThemeContext);\r\n    const [dropId, setDropId] = useState<number | undefined>(undefined)\r\n    const [message, setMessage] = useState<string>(\"\")\r\n    const { createReply } = CategoryActions();\r\n    const [openReplies, setRepliesOpen] = useState(false)\r\n    const location = useLocation<any>();\r\n    const match = useRouteMatch<any>();\r\n\r\n\r\n\r\n    const handleReplyOpen = (comment: Comment) => {\r\n\r\n        threadDispatch({ type: 'OPEN_REPLY', id: comment.comment_id });\r\n        setDropId(comment.comment_id)\r\n        console.log(\"comment\", comment)\r\n\r\n    }\r\n\r\n    const handleReplyClose = () => {\r\n        threadDispatch({ type: 'CLOSE_REPLY', id: dropId })\r\n        setDropId(undefined)\r\n\r\n    }\r\n\r\n\r\n    const handleCreateReply = async (e: React.FormEvent<EventTarget>) => {\r\n        e.preventDefault()\r\n        console.log(\"DROP ID\", dropId)\r\n\r\n        let payload = {\r\n            message: message,\r\n            comment_id: dropId,\r\n            thread_id: match.params.thread_id\r\n        }\r\n\r\n        await createReply(payload)\r\n\r\n        setMessage(\"\")\r\n        handleReplyClose()\r\n        showReplies(comment)\r\n    }\r\n\r\n\r\n    const showReplies = async (comment: Comment) => {\r\n        console.log(\"comment\", comment)\r\n\r\n        threadDispatch({ type: 'OPEN_REPLIES', id: comment.comment_id })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className={`comment-${themeData.theme}`}>\r\n                <div className=\"comment-user\">\r\n                    <span style={{ fontWeight: \"bold\" }}>{comment.user}</span>\r\n                    <span style={{ marginRight: \"5px\", marginBottom: \"5px\" }}>·</span>\r\n                    <Moment style={{ fontSize: \"13px\" }} fromNow className=\"date\">{comment.date}</Moment>\r\n\r\n                </div>\r\n                <div className=\"comment-body\">\r\n                    <span>{comment.message}</span>\r\n\r\n                </div>\r\n                <div className=\"comment-button-bar\">\r\n                    <GoComment style={{ position: \"relative\", top: \"4px\", color: \"rgb(215, 46, 51)\", marginRight: \"5px\", fontSize: \"14px\" }} /><span style={{ fontSize: \"12.4px\", cursor: \"default\", marginRight: \"10px\" }} onClick={comment.replies?.length === 0 ? undefined : () => showReplies(comment)}>{comment.replies?.length} Replies</span>\r\n                    <FaCommentAlt style={{ position: \"relative\", top: \"2px\", color: \"rgb(215, 46, 51)\", marginRight: \"1px\", fontSize: \"11px\" }} /><span style={{ marginLeft: \"5px\", fontSize: \"12.4px\", cursor: \"default\" }} onClick={() => handleReplyOpen(comment)}>Reply </span>\r\n                    <MdReportProblem style={{ position: \"relative\", top: \"2px\", color: \"rgb(215, 46, 51)\", marginLeft: \"10px\", marginRight: \"1px\", fontSize: \"11px\" }} /> <span style={{ fontSize: \"12.4px\", cursor: \"default\" }}>Report</span>\r\n\r\n                </div>\r\n                {comment.replying &&\r\n\r\n                    <div className=\"reply-container\" >\r\n                        <textarea placeholder=\"Leave A Reply...\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n                        <div className=\"reply-button-container\">\r\n                            <span onClick={() => handleReplyClose()}>Cancel</span>\r\n\r\n                            <button className=\"reply-button\" type=\"submit\" onClick={(e) => handleCreateReply(e)}>Submit</button>\r\n                        </div>\r\n\r\n                    </div>}\r\n\r\n                {comment.repliesShow &&\r\n                    <div className=\"replies-container\">\r\n                        {comment.replies?.map((reply: Reply, index: number) =>\r\n\r\n                            <Reply reply={reply} index={index} />\r\n\r\n                        )}\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comment","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\comment\\reply.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\switch\\themeSwitch.js",["224","225"],"import React from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport { purple } from \"@material-ui/core/colors\"\r\nimport Switch from \"@material-ui/core/Switch\"\r\n\r\nconst ThemeSwitch = withStyles({\r\n    thumbChecked: {\r\n        backgroundImage: `url(\"https://www.svgrepo.com/show/65427/sun.svg\")`,\r\n        backgroundSize: \"13px\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    },\r\n    thumbUnchecked: {\r\n        backgroundImage: `url(\"https://dejpknyizje2n.cloudfront.net/marketplace/products/crescent-moon-icon-sticker-1544043862.2615688.png\")`,\r\n        backgroundSize: \"15px\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    },\r\n\r\n    switchBase: {\r\n        color: \"rgba(255,255,255,0.5)\",\r\n        \"&$checked\": {\r\n            color: \"#424242\",\r\n        },\r\n        \"&$checked + $track\": {\r\n            backgroundColor: \"#000\", //purple[500],\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n    root: {},\r\n})(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            color=\"default\"\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n                thumb: props.checked ? classes.thumbChecked : classes.thumbUnchecked,\r\n            }}\r\n            {...props}\r\n        />\r\n    )\r\n})\r\n\r\nexport default ThemeSwitch","C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\themeContext.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\themeReducer.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\components\\loading\\navLoader.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\pages\\search.tsx",["226","227","228","229","230","231","232","233"],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\contexts\\searchContext.tsx",[],"C:\\Users\\hunte\\Desktop\\PROJECTS\\anonboard\\client\\src\\context\\reducers\\searchReducer.tsx",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":12,"column":31,"nodeType":"244","messageId":"245","endLine":12,"endColumn":34},{"ruleId":"238","severity":1,"message":"246","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":19,"column":34,"nodeType":"244","messageId":"245","endLine":19,"endColumn":37},{"ruleId":"247","severity":1,"message":"248","line":136,"column":45,"nodeType":"249","endLine":136,"endColumn":70},{"ruleId":"238","severity":1,"message":"250","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":16},{"ruleId":"238","severity":1,"message":"251","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":19},{"ruleId":"238","severity":1,"message":"252","line":19,"column":23,"nodeType":"240","messageId":"241","endLine":19,"endColumn":36},{"ruleId":"253","severity":1,"message":"254","line":32,"column":8,"nodeType":"255","endLine":32,"endColumn":10,"suggestions":"256"},{"ruleId":"238","severity":1,"message":"257","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":18},{"ruleId":"238","severity":1,"message":"258","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":14},{"ruleId":"238","severity":1,"message":"259","line":10,"column":8,"nodeType":"240","messageId":"241","endLine":10,"endColumn":16},{"ruleId":"238","severity":1,"message":"260","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":23},{"ruleId":"238","severity":1,"message":"246","line":12,"column":10,"nodeType":"240","messageId":"241","endLine":12,"endColumn":14},{"ruleId":"238","severity":1,"message":"252","line":41,"column":21,"nodeType":"240","messageId":"241","endLine":41,"endColumn":34},{"ruleId":"261","severity":1,"message":"262","line":8,"column":39,"nodeType":"240","messageId":"241","endLine":8,"endColumn":49},{"ruleId":"261","severity":1,"message":"263","line":9,"column":39,"nodeType":"240","messageId":"241","endLine":9,"endColumn":49},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"264","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":24},{"ruleId":"238","severity":1,"message":"246","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"252","line":16,"column":23,"nodeType":"240","messageId":"241","endLine":16,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":47,"column":25,"nodeType":"249","endLine":47,"endColumn":49},{"ruleId":"238","severity":1,"message":"257","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":18},{"ruleId":"238","severity":1,"message":"258","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":14},{"ruleId":"238","severity":1,"message":"265","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":16},{"ruleId":"234","replacedBy":"266"},{"ruleId":"236","replacedBy":"267"},{"ruleId":"261","severity":1,"message":"268","line":3,"column":50,"nodeType":"240","messageId":"241","endLine":3,"endColumn":60},{"ruleId":"261","severity":1,"message":"269","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":30},{"ruleId":"261","severity":1,"message":"252","line":18,"column":23,"nodeType":"240","messageId":"241","endLine":18,"endColumn":36},{"ruleId":"238","severity":1,"message":"246","line":11,"column":10,"nodeType":"240","messageId":"241","endLine":11,"endColumn":14},{"ruleId":"238","severity":1,"message":"270","line":23,"column":11,"nodeType":"240","messageId":"241","endLine":23,"endColumn":19},{"ruleId":"238","severity":1,"message":"252","line":28,"column":23,"nodeType":"240","messageId":"241","endLine":28,"endColumn":36},{"ruleId":"238","severity":1,"message":"271","line":30,"column":61,"nodeType":"240","messageId":"241","endLine":30,"endColumn":72},{"ruleId":"238","severity":1,"message":"272","line":32,"column":11,"nodeType":"240","messageId":"241","endLine":32,"endColumn":18},{"ruleId":"253","severity":1,"message":"273","line":84,"column":8,"nodeType":"255","endLine":84,"endColumn":10,"suggestions":"274"},{"ruleId":"253","severity":1,"message":"275","line":89,"column":8,"nodeType":"255","endLine":89,"endColumn":15,"suggestions":"276"},{"ruleId":"247","severity":1,"message":"248","line":100,"column":29,"nodeType":"249","endLine":100,"endColumn":48},{"ruleId":"238","severity":1,"message":"246","line":11,"column":10,"nodeType":"240","messageId":"241","endLine":11,"endColumn":14},{"ruleId":"238","severity":1,"message":"262","line":21,"column":39,"nodeType":"240","messageId":"241","endLine":21,"endColumn":49},{"ruleId":"238","severity":1,"message":"252","line":22,"column":23,"nodeType":"240","messageId":"241","endLine":22,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":73,"column":25,"nodeType":"249","endLine":73,"endColumn":44},{"ruleId":"261","severity":1,"message":"277","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"278","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"246","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":14,"column":40,"nodeType":"244","messageId":"245","endLine":14,"endColumn":43},{"ruleId":"238","severity":1,"message":"252","line":16,"column":23,"nodeType":"240","messageId":"241","endLine":16,"endColumn":36},{"ruleId":"253","severity":1,"message":"279","line":28,"column":8,"nodeType":"255","endLine":28,"endColumn":10,"suggestions":"280"},{"ruleId":"247","severity":1,"message":"248","line":45,"column":21,"nodeType":"249","endLine":45,"endColumn":39},{"ruleId":"238","severity":1,"message":"246","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":14},{"ruleId":"238","severity":1,"message":"252","line":11,"column":23,"nodeType":"240","messageId":"241","endLine":11,"endColumn":36},{"ruleId":"238","severity":1,"message":"272","line":12,"column":11,"nodeType":"240","messageId":"241","endLine":12,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":32,"column":41,"nodeType":"249","endLine":32,"endColumn":67},{"ruleId":"238","severity":1,"message":"246","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"281","line":15,"column":10,"nodeType":"240","messageId":"241","endLine":15,"endColumn":24},{"ruleId":"238","severity":1,"message":"252","line":31,"column":23,"nodeType":"240","messageId":"241","endLine":31,"endColumn":36},{"ruleId":"238","severity":1,"message":"282","line":32,"column":26,"nodeType":"240","messageId":"241","endLine":32,"endColumn":38},{"ruleId":"238","severity":1,"message":"272","line":33,"column":11,"nodeType":"240","messageId":"241","endLine":33,"endColumn":18},{"ruleId":"238","severity":1,"message":"270","line":34,"column":11,"nodeType":"240","messageId":"241","endLine":34,"endColumn":19},{"ruleId":"238","severity":1,"message":"283","line":36,"column":20,"nodeType":"240","messageId":"241","endLine":36,"endColumn":29},{"ruleId":"238","severity":1,"message":"284","line":44,"column":20,"nodeType":"240","messageId":"241","endLine":44,"endColumn":29},{"ruleId":"253","severity":1,"message":"275","line":112,"column":8,"nodeType":"255","endLine":112,"endColumn":10,"suggestions":"285"},{"ruleId":"253","severity":1,"message":"275","line":121,"column":8,"nodeType":"255","endLine":121,"endColumn":32,"suggestions":"286"},{"ruleId":"247","severity":1,"message":"248","line":133,"column":33,"nodeType":"249","endLine":133,"endColumn":52},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"287","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"252","line":17,"column":23,"nodeType":"240","messageId":"241","endLine":17,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":30,"column":29,"nodeType":"249","endLine":30,"endColumn":48},{"ruleId":"238","severity":1,"message":"239","line":1,"column":29,"nodeType":"240","messageId":"241","endLine":1,"endColumn":37},{"ruleId":"238","severity":1,"message":"257","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":18},{"ruleId":"238","severity":1,"message":"258","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":14},{"ruleId":"238","severity":1,"message":"262","line":39,"column":39,"nodeType":"240","messageId":"241","endLine":39,"endColumn":49},{"ruleId":"238","severity":1,"message":"252","line":40,"column":23,"nodeType":"240","messageId":"241","endLine":40,"endColumn":36},{"ruleId":"238","severity":1,"message":"278","line":1,"column":39,"nodeType":"240","messageId":"241","endLine":1,"endColumn":45},{"ruleId":"238","severity":1,"message":"288","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":17},{"ruleId":"238","severity":1,"message":"262","line":24,"column":39,"nodeType":"240","messageId":"241","endLine":24,"endColumn":49},{"ruleId":"238","severity":1,"message":"252","line":25,"column":23,"nodeType":"240","messageId":"241","endLine":25,"endColumn":36},{"ruleId":"238","severity":1,"message":"289","line":29,"column":12,"nodeType":"240","messageId":"241","endLine":29,"endColumn":23},{"ruleId":"238","severity":1,"message":"290","line":29,"column":25,"nodeType":"240","messageId":"241","endLine":29,"endColumn":39},{"ruleId":"238","severity":1,"message":"270","line":30,"column":11,"nodeType":"240","messageId":"241","endLine":30,"endColumn":19},{"ruleId":"261","severity":1,"message":"291","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":16},{"ruleId":"292","severity":1,"message":"293","line":42,"column":17,"nodeType":"294","messageId":"245","endLine":42,"endColumn":22},{"ruleId":"238","severity":1,"message":"246","line":13,"column":10,"nodeType":"240","messageId":"241","endLine":13,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":20,"column":34,"nodeType":"244","messageId":"245","endLine":20,"endColumn":37},{"ruleId":"238","severity":1,"message":"252","line":21,"column":23,"nodeType":"240","messageId":"241","endLine":21,"endColumn":36},{"ruleId":"238","severity":1,"message":"270","line":25,"column":11,"nodeType":"240","messageId":"241","endLine":25,"endColumn":19},{"ruleId":"238","severity":1,"message":"295","line":28,"column":12,"nodeType":"240","messageId":"241","endLine":28,"endColumn":18},{"ruleId":"253","severity":1,"message":"275","line":38,"column":8,"nodeType":"255","endLine":38,"endColumn":10,"suggestions":"296"},{"ruleId":"253","severity":1,"message":"275","line":42,"column":8,"nodeType":"255","endLine":42,"endColumn":27,"suggestions":"297"},{"ruleId":"247","severity":1,"message":"248","line":95,"column":37,"nodeType":"249","endLine":95,"endColumn":63},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'ThreadModal' is defined but never used.","'themeDispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.","ArrayExpression",["300"],"'InputLabel' is defined but never used.","'Select' is defined but never used.","'useFetch' is defined but never used.","'CategoryActions' is defined but never used.","no-unused-vars","'threadData' is assigned a value but never used.","'searchData' is assigned a value but never used.","'triggerAsyncId' is defined but never used.","'GoPlus' is defined but never used.",["298"],["299"],"'withRouter' is defined but never used.","'createBrowserHistory' is defined but never used.","'location' is assigned a value but never used.","'fetchThread' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onMount', 'setState', and 'threadDispatch'. Either include them or remove the dependency array. If 'setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["301"],"React Hook useEffect has a missing dependency: 'onMount'. Either include it or remove the dependency array.",["302"],"'React' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'threadData.trendings' and 'threadDispatch'. Either include them or remove the dependency array.",["303"],"'ToastContainer' is defined but never used.","'fetchRecents' is assigned a value but never used.","'setThread' is assigned a value but never used.","'setDropId' is assigned a value but never used.",["304"],["305"],"'useEffect' is defined but never used.","'FaShare' is defined but never used.","'openReplies' is assigned a value but never used.","'setRepliesOpen' is assigned a value but never used.","'purple' is defined but never used.","no-dupe-keys","Duplicate key 'thumb'.","ObjectExpression","'dropId' is assigned a value but never used.",["306"],["307"],"no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"316","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [fetchCategories]",{"range":"323","text":"324"},"Update the dependencies array to be: [onMount, setState, threadDispatch]",{"range":"325","text":"326"},"Update the dependencies array to be: [onMount, state]",{"range":"327","text":"328"},"Update the dependencies array to be: [threadData.trendings, threadDispatch]",{"range":"329","text":"330"},"Update the dependencies array to be: [onMount]",{"range":"331","text":"332"},"Update the dependencies array to be: [match.params.thread_id, onMount]",{"range":"333","text":"334"},{"range":"335","text":"332"},"Update the dependencies array to be: [match.params.term, onMount]",{"range":"336","text":"337"},[1024,1026],"[fetchCategories]",[2674,2676],"[onMount, setState, threadDispatch]",[2768,2775],"[onMount, state]",[865,867],"[threadData.trendings, threadDispatch]",[3897,3899],"[onMount]",[3963,3987],"[match.params.thread_id, onMount]",[1366,1368],[1422,1441],"[match.params.term, onMount]"]